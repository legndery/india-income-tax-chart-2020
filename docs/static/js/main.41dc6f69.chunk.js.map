{"version":3,"sources":["constants/constants.js","modules/deductions/index.js","util/preBudgetIncometaxCalculator.js","util/postBudgetIncometaxCalculator.js","util/eventEmitter.js","components/BudgetChart.js","components/SalaryBreakup.js","App.js","serviceWorker.js","index.js"],"names":["PRE_BUDGET_SLAB","percentage","start","end","Infinity","rebate","POST_BUDGET_SLAB","DEFAULT_SALARY_BREAKUP","basic","HRA","HRA_CLAIM","CLAIM_80C","metro","Deduction","amount","this","formula","DeductionStandard","Deduction80C","max","HRADeduction","totalSalary","salaryBreakup","hra","hraConsumed","Math","min","totalDeductions","salary","deductionArr","d80CAmt","calculateDeduction","generateDeduction","_","get","preBudgetTaxCalculator","deductionArray","currentSalary","slabStarted","preciseTax","precision","round","roundPrecision","reduce","p","c","salary_in_slab","slab","calculateInslabSalary","postBudgetTaxCalculator","totalIncomeTax","events","EventEmitter","makeRs","val","toFixed","handler","eventEmitter","on","data","BudgetChart","useState","customChartData","setCustomChartData","style","padding","theme","VictoryTheme","material","containerComponent","labels","d","datum","x","y","centerTitle","orientation","gutter","border","stroke","fontSize","name","symbol","fill","tickFormat","dependentAxis","text","angle","domain","parent","Handle","Slider","wrapperStyle","width","margin","SalaryBreakup","salaryDivision","setSalaryDivision","emitter","emit","handle","props","value","dragging","index","restProps","prefixCls","overlay","visible","placement","key","onChange","id","defaultValue","v","className","marginTop","type","defaultChecked","e","target","checked","fontWeight","marginBottom","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.41dc6f69.chunk.js","sourcesContent":["export const PRE_BUDGET_SLAB = [\n  {\n    percentage: 30,\n    start: 1000001,\n    end: Infinity,\n    rebate: false\n  },\n  {\n    percentage: 20,\n    start: 500001,\n    end: 1000000,\n    rebate: false\n  },\n  {\n    percentage: 5,\n    start: 250001,\n    end: 500000,\n    rebate: true\n  },\n  {\n    percentage: 0,\n    start: 0,\n    end: 250000,\n    rebate: false\n  }\n];\n\nexport const POST_BUDGET_SLAB = [\n  {\n    percentage: 30,\n    start: 1500001,\n    end: Infinity,\n    rebate: false\n  },\n  {\n    percentage: 25,\n    start: 1250001,\n    end: 1500000,\n    rebate: false\n  },\n  {\n    percentage: 20,\n    start: 1000001,\n    end: 1250000,\n    rebate: false\n  },\n  {\n    percentage: 15,\n    start: 750001,\n    end: 1000000,\n    rebate: false\n  },\n  {\n    percentage: 10,\n    start: 500001,\n    end: 750001,\n    rebate: false\n  },\n  {\n    percentage: 5,\n    start: 250001,\n    end: 500000,\n    rebate: true\n  },\n  {\n    percentage: 0,\n    start: 0,\n    end: 250000,\n    rebate: false\n  }\n];\nexport const DEFAULT_SALARY_BREAKUP = {\n  basic: 40,\n  HRA: 50,\n  HRA_CLAIM: 60,\n  CLAIM_80C: 100,\n  metro: false\n};\nexport const HEALTH_EDU_CESS = 4;","export class Deduction {\n  constructor() {}\n  formula(amount) {\n    return amount;\n  }\n  calculateDeduction(amount) {\n    return this.formula(amount);\n  }\n}\n\nexport class DeductionStandard extends Deduction {\n  formula() {\n    return 50000;\n  }\n}\nexport class Deduction80C extends Deduction {\n  constructor() {\n    super();\n    this.max = 150000;\n  }\n  formula(amount) {\n    return amount > this.max ? this.max : amount;\n  }\n}\nexport class HRADeduction extends Deduction {\n  constructor(totalSalary, /** @type {{\n    basic: 100,\n    HRA: 50,\n    Special: 100,\n    HRA_CLAIM: 60,\n    CLAIM_80C: 100,\n    metro: false\n  })}*/salaryBreakup){\n    super();\n    this.totalSalary = totalSalary;\n    this.salaryBreakup = salaryBreakup;\n  }\n  formula(){\n    let basic = this.totalSalary*(this.salaryBreakup.basic/100);\n    basic = basic < 0? 0:basic;\n    let hra = basic*(this.salaryBreakup.HRA/100);\n    hra = hra < 0? 0: hra;\n    let hraConsumed = hra*(this.salaryBreakup.HRA_CLAIM/100);\n    hraConsumed = hraConsumed<0?0:hraConsumed;\n    const actualHra = Math.min(\n      basic*(this.salaryBreakup.metro?0.5:0.4),\n      hra,\n      hraConsumed - (0.1*basic)<0?0:hraConsumed - (0.1*basic)\n    )\n    return actualHra;\n  }\n}\n\nexport function generateDeduction({ d80CAmt, salaryBreakup, totalSalary }) {\n  // console.log(d80CAmt);\n  // console.log(salaryBreakup);\n  const d80c = new Deduction80C().calculateDeduction(d80CAmt);\n  const dStd = new DeductionStandard().calculateDeduction();\n  const hra = new HRADeduction(totalSalary, salaryBreakup).calculateDeduction();\n  // console.log(hra);\n  return d80c + dStd + hra;\n}\n","import { PRE_BUDGET_SLAB, HEALTH_EDU_CESS } from \"../constants/constants\";\nimport { generateDeduction } from \"../modules/deductions\";\nimport _ from \"lodash\";\n\nconst totalDeductions = (salary, deductionArr) => {\n\n  return generateDeduction({\n    d80CAmt: _.get(deductionArr, \"d80CAmt\") || 0,\n    totalSalary: salary,\n    salaryBreakup: _.get(deductionArr, \"salaryBreakup\") || {\n      basic: 0,\n      HRA: 0,\n      HRA_CLAIM: 0,\n      CLAIM_80C: 0,\n      metro: false\n    }\n  });\n};\n\nconst calculateInslabSalary = (currentSalary, slab, slabStarted) => {\n  const salary_in_slab = {\n    start: currentSalary - slab.start < 0 ? 0 : currentSalary - slab.start,\n    end: currentSalary - slab.end < 0 ? 0 : currentSalary - slab.end\n  };\n  if (!slabStarted && slab.rebate) {\n    return 0;\n  }\n  return salary_in_slab.start - salary_in_slab.end;\n};\n\nconst roundPrecision = (preciseTax, precision) => {\n  return Math.round(preciseTax / precision) * precision;\n};\n\nconst preBudgetTaxCalculator = (salary, deductionArray) => {\n  let currentSalary = salary;\n  let slabStarted = false;\n  currentSalary -= totalDeductions(salary, deductionArray);\n\n  const totalIncomeTax = PRE_BUDGET_SLAB.reduce((p, c) => {\n    const salary_in_slab = calculateInslabSalary(currentSalary, c, slabStarted);\n    slabStarted = salary_in_slab > 0;\n    p += (salary_in_slab * c.percentage) / 100;\n    return p;\n  }, 0);\n\n  //health and education cess\n  const preciseTax = (totalIncomeTax * (100 + HEALTH_EDU_CESS)) / 100;\n  return roundPrecision(preciseTax, 10);\n};\n\nexport { preBudgetTaxCalculator };\n","import {\n  POST_BUDGET_SLAB,\n} from \"../constants/constants\";\n\nconst calculateInslabSalary = (currentSalary, slab, slabStarted) => {\n  const salary_in_slab = {\n    start: currentSalary - slab.start < 0 ? 0 : currentSalary - slab.start,\n    end: currentSalary - slab.end < 0 ? 0 : currentSalary - slab.end\n  };\n  if (!slabStarted && slab.rebate) {\n    return 0;\n  }\n  return salary_in_slab.start - salary_in_slab.end;\n};\n\nconst roundPrecision = (preciseTax, precision) =>{\n  return Math.round(preciseTax / precision) * precision;\n}\n\nconst postBudgetTaxCalculator = (salary) => {\n  let currentSalary = salary;\n  let slabStarted = false;\n\n  const totalIncomeTax = POST_BUDGET_SLAB.reduce((p, c) => {\n    const salary_in_slab = calculateInslabSalary(currentSalary, c, slabStarted);\n    slabStarted = salary_in_slab > 0;\n    p += (salary_in_slab * c.percentage) / 100;\n    return p;\n  }, 0);\n\n  return roundPrecision(totalIncomeTax, 10);\n};\n\nexport { postBudgetTaxCalculator };\n","import events from 'events';\n\nexport default new events.EventEmitter();","import React, { useState } from \"react\";\n\nimport {\n  VictoryChart,\n  VictoryLine,\n  VictoryTheme,\n  VictoryLegend,\n  VictoryTooltip,\n  VictoryVoronoiContainer,\n  VictoryAxis,\n  VictoryLabel\n} from \"victory\";\nimport { preBudgetTaxCalculator } from \"../util/preBudgetIncometaxCalculator\";\nimport { postBudgetTaxCalculator } from \"../util/postBudgetIncometaxCalculator\";\nimport eventEmitter from \"../util/eventEmitter\";\nimport _ from \"lodash\";\n\nconst makeRs = val => {\n  return `₹${(val / 100).toFixed(2)}L`;\n};\nlet handler = ()=>{};\neventEmitter.on(\"SALARY_CHANGE\", data => {\n  handler(data);\n});\nfunction BudgetChart() {\n  const [customChartData, setCustomChartData] = useState(null);\n  handler = setCustomChartData;\n  return (\n    <div\n      style={{\n        padding: \"20px\"\n      }}\n    >\n      <VictoryChart\n        theme={VictoryTheme.material}\n        containerComponent={\n          <VictoryVoronoiContainer\n            labels={d => {\n              // console.log(d);\n              return \"(x=\" + makeRs(d.datum.x) + \";y=\" + makeRs(d.datum.y) + \")\";\n            }}\n          />\n        }\n      >\n        <VictoryLegend\n          centerTitle\n          orientation=\"horizontal\"\n          gutter={20}\n          style={{\n            border: { stroke: \"black\" },\n            data: { fontSize: \"8px\" },\n            labels: { fontSize: 8 }\n          }}\n          data={[\n            { name: \"Pre Without 80c\", symbol: { fill: \"black\" } },\n            { name: \"Pre With 80c\", symbol: { fill: \"green\" } },\n            { name: \"Post\", symbol: { fill: \"gold\" } },\n            { name: \"Custom Salaried\", symbol: { fill: \"silver\" } }\n          ]}\n        />\n        <VictoryAxis tickFormat={makeRs} />\n        <VictoryAxis dependentAxis tickFormat={makeRs} />\n        <VictoryLabel text=\"Salary →\" x={50} y={320} style={{ fontSize: 11 }} />\n        <VictoryLabel\n          text=\"Tax →\"\n          x={25}\n          y={300}\n          style={{ fontSize: 11 }}\n          angle={-90}\n        />\n        <VictoryLine\n          domain={{ x: [0, 2000] }}\n          // labelComponent={<VictoryTooltip />}\n          // labels={({ datum }) => datum.y.toFixed(2)}\n          style={{\n            data: { stroke: \"black\" },\n            parent: { border: \"1px solid #ccc\" },\n            labels: { fill: \"black\" }\n          }}\n          y={datum => preBudgetTaxCalculator(datum.x * 1000) / 1000}\n        />\n        <VictoryLine\n          domain={{ x: [0, 2000] }}\n          // labelComponent={<VictoryTooltip />}\n          // labels={({ datum }) => datum.y.toFixed(2)}\n          style={{\n            data: { stroke: \"green\" },\n            parent: { border: \"1px solid #ccc\" },\n            labels: { fill: \"green\" }\n          }}\n          y={datum =>\n            preBudgetTaxCalculator(datum.x * 1000, {\n              d80CAmt: 150000\n            }) / 1000\n          }\n        />\n        <VictoryLine\n          domain={{ x: [0, 2000] }}\n          // labelComponent={<VictoryTooltip />}\n          // labels={({ datum }) => datum.y.toFixed(2)}\n          style={{\n            data: { stroke: \"gold\" },\n            parent: { border: \"1px solid #ccc\" },\n            labels: { fill: \"gold\" }\n          }}\n          y={datum => postBudgetTaxCalculator(datum.x * 1000) / 1000}\n        />\n        <VictoryLine\n          // labelComponent={<VictoryTooltip />}\n          // labels={({ datum }) => datum.y.toFixed(2)}\n          domain={{ x: [0, 2000] }}\n          style={{\n            data: { stroke: \"silver\" },\n            parent: { border: \"1px solid #ccc\" },\n            labels: { fill: \"silver\" }\n          }}\n          y={datum =>\n            preBudgetTaxCalculator(datum.x * 1000, {\n              d80CAmt: 150000 * (_.get(customChartData, \"CLAIM_80C\", 0) / 100),\n              salaryBreakup: customChartData\n            }) / 1000\n          }\n        />\n      </VictoryChart>\n    </div>\n  );\n}\n\nexport default BudgetChart;\n","import React, { useState } from \"react\";\nimport Slider from \"rc-slider\";\nimport Tooltip from \"rc-tooltip\";\nimport emitter from \"./../util/eventEmitter\";\n// We can just import Slider or Range to reduce bundle size\n// import Slider from 'rc-slider/lib/Slider';\n// import Range from 'rc-slider/lib/Range';\nimport \"rc-slider/assets/index.css\";\nimport \"rc-tooltip/assets/bootstrap.css\";\nimport { DEFAULT_SALARY_BREAKUP } from \"../constants/constants\";\n\nconst Handle = Slider.Handle;\n\nconst wrapperStyle = { width: 400, margin: 50 };\nfunction SalaryBreakup() {\n  const [salaryDivision, setSalaryDivision] = useState(DEFAULT_SALARY_BREAKUP);\n  emitter.emit(\"SALARY_CHANGE\", salaryDivision);\n  const handle = props => {\n    const { value, dragging, index, ...restProps } = props;\n    return (\n      <Tooltip\n        prefixCls=\"rc-slider-tooltip\"\n        overlay={value}\n        visible={dragging}\n        placement=\"top\"\n        key={index}\n      >\n        <Handle value={value} {...restProps} />\n      </Tooltip>\n    );\n  };\n  const onChange = ({ id, value }) => {\n    // console.log('hururu')\n    setSalaryDivision({\n      ...salaryDivision,\n      [id]: value\n    });\n    emitter.emit(\"SALARY_CHANGE\", salaryDivision);\n  };\n  return (\n    <div>\n      <div style={wrapperStyle}>\n        <p>\n          <strong>Basic Salary:</strong>\n          {salaryDivision.basic}% of Total Salary\n        </p>\n        <Slider\n          min={0}\n          max={100}\n          defaultValue={40}\n          handle={handle}\n          onChange={v => onChange({ id: \"basic\", value: v })}\n          className=\"slider1\"\n        />\n        <p style={{ marginTop: 20 }}>\n          <strong>HRA:</strong> {salaryDivision.HRA}% of Basic Salary\n        </p>\n        <Slider\n          min={0}\n          max={100}\n          defaultValue={50}\n          handle={handle}\n          onChange={v => onChange({ id: \"HRA\", value: v })}\n          className=\"slider1\"\n        />\n        <p style={{ marginTop: 20 }}>\n          <strong>Metro City:</strong>{\" \"}\n          <input\n            type=\"checkbox\"\n            defaultChecked={salaryDivision.metro}\n            onChange={e => onChange({ id: \"metro\", value: e.target.checked })}\n          />\n        </p>\n\n        <p style={{ marginTop: 20 }}>\n          <strong>HRA Claimed: </strong>\n          {salaryDivision.HRA_CLAIM}% of HRA\n        </p>\n        <Slider\n          min={0}\n          max={100}\n          defaultValue={60}\n          handle={handle}\n          onChange={v => onChange({ id: \"HRA_CLAIM\", value: v })}\n        />\n        <p style={{ marginTop: 20 }}>\n          <strong>80C Claimed:</strong> {salaryDivision.CLAIM_80C}% of 1.5Lakh\n        </p>\n        <Slider\n          min={0}\n          max={100}\n          defaultValue={100}\n          handle={handle}\n          onChange={v => onChange({ id: \"CLAIM_80C\", value: v })}\n        />\n      </div>\n      <div style={{ ...wrapperStyle, fontWeight: \"bold\" }}>\n        <p style={{marginBottom: 10}}>\n          The default configuration is based upon current/modern salary breakups where,\n          In total salary\n        </p>\n        <ul>\n          <li>2 parts basic salary: 40%</li>\n          <li>1 part HRA or 50% of Basic: 20%</li>\n          <li>2 Part Special Allowance: 40%</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default SalaryBreakup;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport PreBudgetChart from \"./components/BudgetChart\";\nimport SalaryBreakup from \"./components/SalaryBreakup\";\nfunction App() {\n  const CustomChartData = {}\n  return (\n    <div className=\"App\">\n      <div className=\"row\">\n        <div className=\"column\">\n          <PreBudgetChart />\n        </div>\n        <div className=\"column\">\n          <SalaryBreakup/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}